apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: delivery
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
      app: delivery
  template:
    metadata:
      name: delivery
      labels:
        app: delivery
    spec:
      initContainers:
        - name: postgresdb
          image: postgres:15.4
          command: [ 'sh', '-c',
            'until pg_isready -h postgresdb -p 5432; 
                    do echo waiting for database; sleep 2; done;' ]
      containers:
        - name:  {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: {{.Values.service.port}}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: db-config-map
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: db-config-map
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: db-config-map
                  key: POSTGRES_PORT
          resources:
            requests:
              cpu: 400m
              memory: 500Mi
      imagePullSecrets:
        - name: secret-dockerhub